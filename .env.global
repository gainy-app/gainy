# general
ENV=local
PUBLIC_SCHEMA_NAME=public
POSTGRES_PASSWORD=postgrespassword

PG_DBNAME=postgres
PG_HOST=postgres
PG_PORT=5432
PG_USERNAME=postgres
PG_PASSWORD=${POSTGRES_PASSWORD}

PG_DATADOG_PASSWORD=foo
PG_INTERNAL_SYNC_USERNAME=internal_sync
PG_INTERNAL_SYNC_PASSWORD=foo

# Polygon
POLYGON_API_TOKEN=
POLYGON_REALTIME_STREAMING_HOST=delayed.polygon.io
# socket.polygon.io for real-time

# CoinGecko
COINGECKO_API_KEY=

# EOD
EOD_API_TOKEN=OeAFFmMliFG5orCUuwAKQ8l4WWFQ67YX

# hasura
HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anonymous
HASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://${PG_USERNAME}:${POSTGRES_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_DBNAME}
HASURA_GRAPHQL_ENABLED_LOG_TYPES="startup, http-log, webhook-log, websocket-log, query-log"
HASURA_GRAPHQL_DATABASE_URL=postgres://${PG_USERNAME}:${POSTGRES_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_DBNAME}
HASURA_GRAPHQL_READ_REPLICA_URLS=
HASURA_GRAPHQL_PUBLIC_SCHEMA_NAME=${PUBLIC_SCHEMA_NAME}
HASURA_GRAPHQL_ENABLE_CONSOLE=true
HASURA_GRAPHQL_DEV_MODE=true
HASURA_GRAPHQL_ADMIN_SECRET=myadminsecretkey
HASURA_GRAPHQL_JWT_SEHASURA_GRAPHQL_JWT_SECRETCRET='{"type":"RS256","jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com", "audience": "gainyapp", "issuer": "https://securetoken.google.com/gainyapp"}'
AWS_LAMBDA_API_GATEWAY_ENDPOINT=http://lambda-router:5000

# meltano scheduler
#AWS_ACCESS_KEY_ID
#AWS_SECRET_ACCESS_KEY
#AWS_DEFAULT_REGION
MELTANO_DATABASE_URI=postgresql://${PG_USERNAME}:${POSTGRES_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_DBNAME}?options=-csearch_path%3Dmeltano
MELTANO_LOG_LEVEL=info
AIRFLOW_DATABASE_URI=postgresql://${PG_USERNAME}:${POSTGRES_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_DBNAME}?options=-csearch_path=airflow
AIRFLOW_LOG_LEVEL=INFO
AIRFLOW_PASSWORD=admin
UPSTREAM_POOL_SIZE=1
DOWNSTREAM_POOL_SIZE=1
EODHISTORICALDATA_JOBS_COUNT=1
EODHISTORICALDATA_PRICES_JOBS_COUNT=1
COINGECKO_JOBS_COUNT=1
POLYGON_JOBS_COUNT=2
TAP_EODHISTORICALDATA_API_TOKEN=${EOD_API_TOKEN}
# common stock, index, crypto, etf, fund
TAP_EODHISTORICALDATA_SYMBOLS='["AAPL", "DJI.INDX", "BTC.CC", "SPY", "CADWX"]'
#TAP_EODHISTORICALDATA_EXCHANGES='["NASDAQ", "NYSE", "CC", "INDX"]'
TAP_EODHISTORICALDATA_EXCHANGE_SYMBOLS_LIMIT=1
TAP_POLYGON_API_KEY=${POLYGON_API_TOKEN}
TAP_POLYGON_CRYPTO_SYMBOLS='["BTCUSD"]'
#TAP_POLYGON_STOCK_EXCHANGES='["XNAS", "XNYS"]'
TAP_POLYGON_STOCK_SYMBOLS='["AAPL"]'
TAP_POLYGON_OPTION_CONTRACT_NAMES='["AMZN230915C00150000"]'
TAP_COINGECKO_API_KEY=${COINGECKO_API_KEY}
TARGET_POSTGRES_HOST=${PG_HOST}
TARGET_POSTGRES_PORT=${PG_PORT}
TARGET_POSTGRES_USER=${PG_USERNAME}
TARGET_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
TARGET_POSTGRES_DBNAME=${PG_DBNAME}
TARGET_POSTGRES_SCHEMA=raw_data

TARGET_BIGQUERY_PROJECT_ID=gainyapp
TARGET_BIGQUERY_DEFAULT_TARGET_SCHEMA=gainyapp_integration_local
TARGET_BIGQUERY_LOCATION=
BIGQUERY_CREDENTIALS=

DBT_TARGET=postgres
DBT_THREADS=2
DBT_TARGET_SCHEMA=${PUBLIC_SCHEMA_NAME}

MLFLOW_TRACKING_URI=postgresql://${PG_USERNAME}:${POSTGRES_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_DBNAME}?options=-csearch_path=mlflow
MLFLOW_ARTIFACT_LOCATION=s3://gainy-mlflow-test

TARGET_POSTGRES_ANALYTICS_HOST=${PG_HOST}
TARGET_POSTGRES_ANALYTICS_PORT=${PG_PORT}
TARGET_POSTGRES_ANALYTICS_USER=${PG_USERNAME}
TARGET_POSTGRES_ANALYTICS_PASSWORD=${POSTGRES_PASSWORD}
TARGET_POSTGRES_ANALYTICS_DBNAME=${PG_DBNAME}
TARGET_POSTGRES_ANALYTICS_SCHEMA=gainy_analytics
TAP_POSTGRES_WEBSITE_HOST=${PG_HOST}
TAP_POSTGRES_WEBSITE_PORT=${PG_PORT}
TAP_POSTGRES_WEBSITE_USER=${PG_USERNAME}
TAP_POSTGRES_WEBSITE_PASSWORD=${POSTGRES_PASSWORD}
TAP_POSTGRES_WEBSITE_DBNAME=${PG_DBNAME}
TAP_POSTGRES_WEBSITE_SCHEMA=website
TAP_POSTGRES_HOST=${PG_HOST}
TAP_POSTGRES_PORT=${PG_PORT}
TAP_POSTGRES_USER=${PG_USERNAME}
TAP_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
TAP_POSTGRES_DBNAME=${PG_DBNAME}
TAP_POSTGRES_FILTER_SCHEMAS=${PUBLIC_SCHEMA_NAME}
TAP_POSTGRES_SYNC_HOST=
TAP_POSTGRES_SYNC_PORT=
TAP_POSTGRES_SYNC_USER=
TAP_POSTGRES_SYNC_PASSWORD=
TAP_POSTGRES_SYNC_DBNAME=
TAP_POSTGRES_SYNC_FILTER_SCHEMAS=
TAP_POSTGRES_ANALYTICS_FILTER_SCHEMAS=app,raw_data,${PUBLIC_SCHEMA_NAME}
TAP_POSTGRES_HISTORY_FILTER_SCHEMAS=app,${PUBLIC_SCHEMA_NAME}
TARGET_S3_CSV_HISTORY_S3_BUCKET=gainy-history-${ENV}
MIN_COLLECTION_SIZE=1

# firebase
FIREBASE_TOKEN=
GOOGLE_APPLICATION_CREDENTIALS=/var/www/firebase.key.json

# lambda
AWS_LAMBDA_API_GATEWAY_PROXY_INTEGRATION=false
HUBSPOT_API_KEY=

# Plaid
PLAID_CLIENT_ID=60912cad2412370011b1d89b
PLAID_SECRET=687cb9d783b26fb3dd4a15a3c63c15
PLAID_ENV=sandbox
PLAID_WEBHOOK_URL=http://example.com
# Use 'sandbox' to test with fake credentials in Plaid's Sandbox environment
# Use 'development' to test with real credentials while developing
# Use 'production' to go live with real users

# Algolia
ALGOLIA_APP_ID=test
ALGOLIA_API_KEY=test
ALGOLIA_TICKERS_INDEX=
ALGOLIA_COLLECTIONS_INDEX=
ALGOLIA_INDEXING_API_KEY=
ALGOLIA_SEARCH_API_KEY=

# Datadog
DATADOG_API_KEY=
DATADOG_APP_KEY=
DD_API_KEY=${DATADOG_API_KEY}
DD_SITE=datadoghq.com

ONESIGNAL_API_KEY=
ONESIGNAL_APP_ID=
ONESIGNAL_SEGMENTS_PRODUCTION='["Subscribed Users"]'
ONESIGNAL_SEGMENTS_TEST='["Testers"]'
# developer email for receiving notifications from local env
ONESIGNAL_EMAILS_LOCAL='[]'

REVENUECAT_API_KEY=

STRIPE_API_KEY=sk_test_51IHIwcD1LH0kYxaozKv2mlVdSUzZM1QMqsvWACJIgJMmr2b1yWHJXdJ50fF0jMiTzJ3GREXhHqUpmE2gkutZTm6300LCPdUZgu
STRIPE_PUBLISHABLE_KEY=pk_test_51IHIwcD1LH0kYxaoXnmWLHgQV2ilIi763QnM2bOX8cD6cIbE81K2E76LF7rCCXIc7q2jc3VdkjeLnF1UcbohrAW700CuZTN2q2

DRIVEWEALTH_IS_UAT=
DRIVEWEALTH_APP_KEY=
DRIVEWEALTH_WLP_ID=
DRIVEWEALTH_PARENT_IBID=
DRIVEWEALTH_RIA_ID=
DRIVEWEALTH_RIA_PRODUCT_ID=
DRIVEWEALTH_API_USERNAME=
DRIVEWEALTH_API_PASSWORD=
DRIVEWEALTH_API_URL=

S3_BUCKET_UPLOADS_KYC=uploads-kyc-local
