type Query {
  create_plaid_link_token(
    profile_id: Int!
    redirect_uri: String!
    env: String
  ): CreatePlaidLinkTokenOutput
}

type Query {
  fetchChartData(
    symbol: String!
    period: String!
  ): [ChartDataPoint]
}

type Query {
  fetchLivePrices(
    symbols: [String]
  ): [LiveStockPriceData]
}

type Query {
  fetchNewsData(
    symbol: String!
    limit: Int
  ): [NewsDataPoint]
}

type Query {
  get_match_score_by_ticker(
    profile_id: Int
    symbol: String
  ): MatchScore
}

type Query {
  get_match_scores_by_collection(
    profile_id: Int!
    collection_id: Int!
  ): [MatchScore]
}

type Query {
  get_match_scores_by_ticker_list(
    profile_id: Int!
    symbols: [String]
  ): [MatchScore]
}

type Query {
  get_portfolio_chart(
    profile_id: Int!
    periods: [String]!
    account_ids: [Int]
    institution_ids: [Int]
    interest_ids: [Int]
    category_ids: [Int]
    security_types: [String]
    ltt_only: Boolean
  ): [ChartDataPoint]
}

type Query {
  get_portfolio_holdings(
    profile_id: Int!
  ): [PortfolioHolding]
}

type Query {
  get_portfolio_transactions(
    profile_id: Int!
    count: Int
    offset: Int
  ): [PortfolioTransaction]
}

type Query {
  get_recommended_collections(
    profile_id: Int!
    limit: Int
  ): [Collection]
}

type Query {
  link_plaid_account(
    profile_id: Int!
    public_token: String!
    env: String
  ): LinkPlaidAccountOutput
}

type Mutation {
  plaid_webhook(
    webhook_type: String!
    webhook_code: String!
    item_id: String!
    error: PlaidWebhookError
    new_holdings: Int
    updated_holdings: Int
    new_investments_transactions: Int
    canceled_investments_transactions: Int
  ): PlaidWebhookOutput
}

type Query {
  search_collections(
    query: String!
    offset: Int
    limit: Int
  ): [Collection]
}

type Query {
  search_tickers(
    query: String!
    offset: Int
    limit: Int
  ): [Ticker]
}

input PlaidWebhookError {
  error_code: Int
}

type ChartDataPoint {
  datetime: String
  period: String
  open: Float
  high: Float
  low: Float
  close: Float
  adjusted_close: Float
  volume: Float
}

type NewsDataPoint {
  datetime: String
  title: String
  description: String
  url: String
  imageUrl: String
  sourceName: String
  sourceUrl: String
}

type LivePriceData {
  datetime: String
  daily_change: Float
  daily_change_p: Float
  close: Float
}

type LiveStockPriceData {
  symbol: String
  datetime: String
  daily_change: Float
  daily_change_p: Float
  close: Float
}

type Ticker {
  symbol: String!
}

type Collection {
  id: Int!
}

type MatchScore {
  symbol: String!
  match_score: Int!
  is_match: Boolean!
  fits_risk: Int!
  risk_similarity: Float!
  fits_categories: Int!
  category_matches: String
  fits_interests: Int!
  interest_matches: String
}

type LinkPlaidAccountOutput {
  result: Boolean!
  plaid_access_token_id: Int
}

type PortfolioHolding {
  id: Int!
  iso_currency_code: String
  created_at: String!
  updated_at: String!
  quantity: Float!
  ref_id: String!
  security_id: Int!
  account_id: Int!
  profile_id: Int!
  plaid_access_token_id: Int!
}

type PortfolioTransaction {
  id: Int!
  amount: Float!
  date: String!
  fees: Float!
  iso_currency_code: String
  name: String!
  price: Float!
  quantity: Float!
  subtype: String!
  type: String!
  ref_id: String!
  security_id: Int!
  profile_id: Int!
  account_id: Int!
  created_at: String!
  updated_at: String!
  plaid_access_token_id: Int!
}

type CreatePlaidLinkTokenOutput {
  link_token: String!
}

type PlaidWebhookOutput {
  count: Int!
}

