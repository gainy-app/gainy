version: 1
send_anonymous_usage_stats: false
project_id: 36bd814f-1cb5-402a-8d9c-d3219c38f2b3
plugins:
  extractors:
    - name: tap-eodhistoricaldata
      namespace: tap_eodhistoricaldata
      pip_url: /tap-eodhistoricaldata
      executable: tap-eodhistoricaldata
      capabilities:
        - discover
        - catalog
        - state
      settings:
        - name: api_token
        - name: exchanges
          kind: array
        - name: symbols
          kind: array
        - name: split_id
        - name: split_num
    - name: tap-polygon
      namespace: tap_polygon
      pip_url: /tap-polygon
      executable: tap-polygon
      capabilities:
        - discover
        - catalog
        - state
      settings:
        - name: api_key
    - name: tap-csv
      config:
        files:
          - entity: gainy_industries
            path: data/gainy_industries.csv
            keys: [ "id" ]
          - entity: gainy_ticker_industries
            path: data/industry_tickers.csv
            keys: [ "Code" ]
          - entity: gainy_collections
            path: data/collections.csv
            keys: [ "id" ]
          - entity: gainy_categories
            path: data/categories.csv
            keys: [ "id" ]
          - entity: gainy_interests
            path: data/interests.csv
            keys: [ "id" ]
          - entity: gainy_countries
            path: data/countries.csv # https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/blob/master/all/all.json
            keys: [ "name", "alpha-2", "alpha-3" ]
          - entity: exchanges
            path: data/exchanges.csv
            keys: [ "name" ]
    - name: tap-postgres--sync
      inherit_from: tap-postgres
      catalog: configs/raw-sync/tap.catalog.json
      config:
        itersize: 1
    - name: tap-postgres--search
      inherit_from: tap-postgres
      catalog: configs/search/tap.catalog.json
  loaders:
    - name: target-postgres
      variant: transferwise
      pip_url: pipelinewise-target-postgres
      config:
        batch_size_rows: 100
        parallelism: 5
    - name: target-algolia
      namespace: target-algolia
      pip_url: /target-algolia
      config:
        app_id: $ALGOLIA_APP_ID
        api_key: $ALGOLIA_INDEXING_API_KEY
        index_mapping_file: configs/search/search.mapping.yml
  transformers:
    - name: dbt
      pip_url: dbt==0.20.1
      config:
        target: postgres
        models: '*'
  orchestrators:
    - name: airflow
      pip_url: psycopg2-binary==2.9.1 apache-airflow==2.1.2 --constraint https://raw.githubusercontent.com/apache/airflow/constraints-2.1.2/constraints-${MELTANO__PYTHON_VERSION}.txt
      config:
        core:
          sql_alchemy_conn: $AIRFLOW_DATABASE_URI
          executor: LocalExecutor
schedules:
  - name: csv-to-postgres
    extractor: tap-csv
    loader: target-postgres
    transform: skip
    interval: '@daily'
    start_date: 2021-09-03 13:52:48.598227

  - name: polygon-to-postgres
    extractor: tap-polygon
    loader: target-postgres
    transform: skip
    interval: '@daily'
    start_date: 2021-09-03 13:52:48.598227

  - name: prod-to-postgres
    extractor: tap-postgres--sync
    loader: target-postgres
    transform: run
    interval: '@daily'
    start_date: 2021-09-03 13:52:48.598227
    env:
      TARGET_ENVS: '["test"]'

  - name: eodhistoricaldata-to-postgres-0
    extractor: tap-eodhistoricaldata
    loader: target-postgres
    transform: skip
    interval: '@daily'
    start_date: 2021-06-17 10:40:58.742133
    env:
      TARGET_ENVS: '["production","local"]'

  - name: postgres-to-search
    extractor: tap-postgres--search
    loader: target-algolia
    transform: skip
    interval: '@daily'
    start_date: 2021-11-15 00:00:00.000000
    env:
      TARGET_ENVS: '["production","test"]'
      INTEGRATION: 'DOWNSTREAM'
