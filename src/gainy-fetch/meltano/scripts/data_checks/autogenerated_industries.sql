with c_base_0 as
         (
             select t.exchange          as t_exchange,
                    t.symbol            as t_symbol,
                    t."type"            as t_type,
                    t."name"            as t_name,
                    t.ipo_date          as t_ipo_date,
                    t.country_name      as t_country_name,
                    t.description       as t_description,
                    t.sector            as t_eod_sector,
                    t.industry          as t_eod_industry,
                    t.gic_sector        as t_gic_sector,
                    t.gic_group         as t_gic_group,
                    t.gic_industry      as t_gic_industry,
                    t.gic_sub_industry  as t_gic_sub_industry,
                    t.updated_at        as t_updated_at,
                    '|RGTI|'            as rgti,  -- raw loaded hand marked base (tickers with industries as training sample for the model)
                    rgi.id              as rgi_ind_id,
                    rgi."name"          as rgi_ind_name,
                    '|RGATI|'           as rgati, -- raw automated from the model which uses that hand base for learning
                    rgati.industry_id_1 as rgati_ind_id_1,
                    rgi_1."name"        as rgi_ind_name_1,
                    rgati.industry_id_2 as rgati_ind_id_2,
                    rgi_2."name"        as rgi_ind_name_2,
                    '|TI_1|'            as ti_1,  -- production tickers with industries from that automated (1st industry of ticker)
                    ti_1.industry_order as ti_ind_ord_1,
                    ti_1.industry_id    as ti_ind_id_1,
                    ti_1.updated_at     as ti_ind_updated_at_1,
                    gi_1."name"         as gi_ind_name_1,
                    gi_1.collection_id  as gi_ind_col_id_1,
                    gi_1.updated_at     as gi_ind_updated_at_1,
                    '|TI_2|'            as ti_2,  -- production tickers with industries from that automated (2nd industry of ticker)
                    ti_2.industry_order as ti_ind_ord_2,
                    ti_2.industry_id    as ti_ind_id_2,
                    ti_2.updated_at     as ti_ind_updated_at_2,
                    gi_2."name"         as gi_ind_name_2,
                    gi_2.collection_id  as gi_ind_col_id_2,
                    gi_2.updated_at     as gi_ind_updated_at_2
             from tickers t
                      left join raw_data.gainy_ticker_industries rgti on rgti.code = t.symbol
                      left join raw_data.gainy_industries rgi on rgi."name" = rgti."industry name"
                      left join raw_data.auto_ticker_industries rgati on rgati.symbol = t.symbol
                      left join raw_data.gainy_industries rgi_1 on rgi_1.id = rgati.industry_id_1::varchar
                      left join raw_data.gainy_industries rgi_2 on rgi_2.id = rgati.industry_id_2::varchar
                      left join ticker_industries ti_1 on ti_1.symbol = t.symbol
                      left join gainy_industries gi_1 on gi_1.id = ti_1.industry_id
                      left join ticker_industries ti_2 on ti_2.symbol = t.symbol
                      left join gainy_industries gi_2 on gi_2.id = ti_2.industry_id
             where (ti_1.industry_order = 1 or ti_1.industry_order is null)
               and (ti_2.industry_order = 2 or ti_2.industry_order is null)
               and t."type" ilike 'common stock'
         ),

     c_base_1 as
         (
             select b.*,
                    coalesce(length(t_description) <= 1, true) as is_descr_not_usable
             from c_base_0 b
         ),

     c_base_2 as
         (
             select b.*,

                    -- autogenerator can work only if the description exists in the company record
                    is_descr_not_usable or
                    ((rgati_ind_id_1 is not null) and (rgati_ind_id_2 is not null)) as is_rgati_worked_well,

                    -- just to see if autogenerator gives same industries as was shown to it from manual. It's OK to not to be the same in all cases, so just to see that.
                    -- yeah, just a sugar to play
                    is_descr_not_usable or (rgi_ind_id is null) or
                    ((coalesce(rgati_ind_id_1, -1)::varchar = rgi_ind_id) or
                     (coalesce(rgati_ind_id_2, -1)::varchar = rgi_ind_id))          as is_rgati_synced_with_manual,

                    -- we overriding autogenerated industries with manual if that manual was set
                    case
                        when rgi_ind_id is null
                            then (coalesce(rgati_ind_id_1, -1) = coalesce(ti_ind_id_1, -1)) and
                                 (coalesce(rgati_ind_id_2, -1) = coalesce(ti_ind_id_2, -1))
                        else -- manual written one is shifting automated seq to the right as an ordered sequence, but only if the first one of automated not equal to manual one
                            case
                                when rgi_ind_id = coalesce(rgati_ind_id_1, -1)::varchar
                                    then (coalesce(rgati_ind_id_1, -1) = coalesce(ti_ind_id_1, -1)) and
                                         (coalesce(rgati_ind_id_2, -1) = coalesce(ti_ind_id_2, -1)) --same as case as above actually
                                else (rgi_ind_id = coalesce(ti_ind_id_1, -1)::varchar) and
                                     (coalesce(rgati_ind_id_1, -1) = coalesce(ti_ind_id_2, -1))
                                end
                        end                                                         as is_prodind_synced_with_rgatiormanual

             from c_base_1 b
         )
select *
from c_base_2
where not (is_rgati_worked_well and is_prodind_synced_with_rgatiormanual) -- this two checks are critical
