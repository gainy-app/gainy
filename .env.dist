# gainy-fetch
TAP_EODHISTORICALDATA_API_TOKEN=
TAP_EODHISTORICALDATA_SYMBOLS=["AAPL","IBM","F"]
TARGET_POSTGRES_HOST            = postgres
TARGET_POSTGRES_PORT            = 5432
TARGET_POSTGRES_USER            = postgres
TARGET_POSTGRES_PASSWORD        = postgrespassword
TARGET_POSTGRES_DBNAME          = postgres
TARGET_POSTGRES_SCHEMA          = "public"
PG_DATABASE="postgres"
PG_ADDRESS="postgres"
PG_PASSWORD="postgrespassword"
PG_PORT="5432"
PG_USERNAME="postgres"
DBT_TARGET_SCHEMA="public"
DBT_TARGET="postgres"
MELTANO_DATABASE_URI="postgresql://postgres:postgrespassword@postgres:5432/postgres?options=-csearch_path%3Dmeltano"

# hasura
HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anonymous
HASURA_PORT=8080
HASURA_GRAPHQL_METADATA_DATABASE_URL="postgres://postgres:postgrespassword@postgres:5432/postgres"
HASURA_GRAPHQL_ENABLED_LOG_TYPES="startup, http-log, webhook-log, websocket-log, query-log"
HASURA_GRAPHQL_DATABASE_URL="postgres://postgres:postgrespassword@postgres:5432/postgres"
## enable the console served by server
HASURA_GRAPHQL_ENABLE_CONSOLE="true" # set to "false" to disable console
## enable debugging mode. It is recommended to disable this in production
HASURA_GRAPHQL_DEV_MODE="true"
## uncomment next line to set an admin secret
HASURA_GRAPHQL_ADMIN_SECRET=myadminsecretkey
## uncomment to enable JWT authentication via Firebase (switches Hasura to JWT mode)
HASURA_GRAPHQL_JWT_SECRET='{"type":"RS256","jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com", "audience": "gainyapp", "issuer": "https://securetoken.google.com/gainyapp"}'

#firebase
FIREBASE_TOKEN=
