version: '3.6'
services:
  meltano-airflow-scheduler:
    restart: always
    env_file:
      - .env
    build:
      context: ./src/gainy-fetch
      args:
        BASE_IMAGE_REGISTRY_ADDRESS: ${BASE_IMAGE_REGISTRY_ADDRESS}
        BASE_IMAGE_VERSION: ${BASE_IMAGE_VERSION}
    image: meltano-airflow:local
    volumes:
      - ./src/gainy-fetch/meltano/scripts:/project/scripts:delegated
      - ./src/gainy-fetch/meltano/meltano.template.yml:/project/meltano.template.yml:delegated
      - ./src/gainy-fetch/meltano/transform:/project/transform:delegated
      - ./src/gainy-fetch/meltano/data:/project/data:delegated
      - ./src/gainy-fetch/meltano/orchestrate:/project/orchestrate:delegated
      - ./src/gainy-fetch/meltano/seed:/project/seed:delegated
      - meltano_data:/project/.meltano/run/airflow
    environment:
      EODHISTORICALDATA_JOBS_COUNT: 1
      AIRFLOW_PASSWORD: admin
    depends_on:
      - postgres
    entrypoint: "/init.sh"
    command: "invoke airflow scheduler"

  meltano-airflow-ui:
    restart: always
    env_file:
      - .env
    image: meltano-airflow:local
    ports:
      - "5001:5001"
    volumes:
      - ./src/gainy-fetch/meltano/orchestrate:/project/orchestrate:delegated
      - meltano_data:/project/.meltano/run/airflow
    depends_on:
      - postgres
      - meltano-airflow-scheduler
    entrypoint: "/wait.sh"
    command: "invoke airflow webserver -p 5001"

  postgres:
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
    ports:
      - "5432:5432"

  hasura:
    build:
      context: ./src/hasura
      args:
        BASE_IMAGE_REGISTRY_ADDRESS: ${BASE_IMAGE_REGISTRY_ADDRESS}
        BASE_IMAGE_VERSION: ${BASE_IMAGE_VERSION}
    ports:
    - "8080:8080"
    - "9693:9693"
    - "9695:9695"
    volumes:
      - ./src/hasura/hasura:/hasura:delegated
    depends_on:
    - "postgres"
    restart: always
    env_file:
      - .env
    environment:
      HASURA_PORT: ${HASURA_PORT}

  firebase:
    image: ${BASE_IMAGE_REGISTRY_ADDRESS}/gainy-firebase:${BASE_IMAGE_VERSION}
    restart: always
    volumes:
      - ./src/firebase:/var/www:delegated
    ports:
      - "8081:5000" # for auth demo hosting
    env_file:
      - .env
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: "/var/www/firebase.key.json"

volumes:
  db_data:
  meltano_data:
