[
  {
    "volumesFrom": [],
    "memory": ${hasura_memory_credits},
    "extraHosts": null,
    "dnsServers": null,
    "disableNetworking": null,
    "dnsSearchDomains": null,
    "portMappings": [
      {
        "hostPort": 8080,
        "containerPort": 8080,
        "protocol": "tcp"
      }
    ],
    "hostname": null,
    "essential": true,
    "entryPoint": [],
    "mountPoints": [],
    "name": "hasura",
    "ulimits": null,
    "dockerSecurityOptions": null,
    "environment": [
      { "name": "HASURA_GRAPHQL_UNAUTHORIZED_ROLE",     "value": "anonymous" },
      { "name": "HASURA_GRAPHQL_METADATA_DATABASE_URL", "value": "postgres://${pg_username}:${pg_password}@${pg_host}:${pg_port}/${pg_dbname}" },
      { "name": "HASURA_GRAPHQL_ENABLED_LOG_TYPES",     "value": "startup, http-log, webhook-log, websocket-log, query-log" },
      { "name": "HASURA_GRAPHQL_DATABASE_URL",          "value": "postgres://${pg_username}:${pg_password}@${pg_host}:${pg_port}/${pg_dbname}" },
      { "name": "HASURA_GRAPHQL_READ_REPLICA_URLS",     "value": "${pg_replica_uris}" },
      { "name": "HASURA_GRAPHQL_PUBLIC_SCHEMA_NAME",    "value": "${pg_transform_schema}" },
      { "name": "HASURA_GRAPHQL_ENABLE_CONSOLE",        "value": "${hasura_enable_console}" },
      { "name": "HASURA_GRAPHQL_DEV_MODE",              "value": "${hasura_enable_dev_mode}" },
      { "name": "HASURA_GRAPHQL_ADMIN_SECRET",          "value": "${hasura_admin_secret}" },
      { "name": "HASURA_GRAPHQL_JWT_SECRET",            "value": ${jsonencode(hasura_jwt_secret)} },
      { "name": "AWS_LAMBDA_API_GATEWAY_ENDPOINT",      "value": "${aws_lambda_api_gateway_endpoint}" }
    ],
    "links": [],
    "workingDirectory": null,
    "readonlyRootFilesystem": null,
    "image": "${hasura_image}",
    "command": [],
    "user": null,
    "dockerLabels": null,
    "cpu": ${hasura_cpu_credits},
    "privileged": null,
    "memoryReservation": null,
    "healthCheck": {
      "command": [ "CMD-SHELL", "curl -s http://localhost:8080/healthz | grep OK && pytest tests/test_smoke.py" ],
      "interval": ${hasura_healthcheck_interval},
      "retries": ${hasura_healthcheck_retries},
      "timeout": 30
    },
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${aws_log_group_name}",
        "awslogs-region": "${aws_log_region}",
        "awslogs-stream-prefix": "hasura"
      }
    }
  },
  {
    "name": "meltano-airflow-ui",
    "memory": ${airflow_ui_memory_credits},
    "extraHosts": null,
    "dnsServers": null,
    "disableNetworking": null,
    "dnsSearchDomains": null,
    "portMappings": [
      {
        "hostPort": ${airflow_port},
        "containerPort": ${airflow_port},
        "protocol": "tcp"
      }
    ],
    "hostname": null,
    "essential": true,
    "entryPoint": ["/wait.sh"],
    "mountPoints": [
      {
        "containerPath" : "/project/.meltano/run/airflow",
        "sourceVolume" : "meltano-data"
      }
    ],
    "ulimits": null,
    "dockerSecurityOptions": null,
    "environment": [
      { "name": "ENV",                          "value": "${env}" },
      { "name": "PG_DATABASE",                  "value": "${pg_dbname}" },
      { "name": "PG_ADDRESS",                   "value": "${pg_host}" },
      { "name": "PG_PASSWORD",                  "value": "${pg_password}" },
      { "name": "PG_PORT",                      "value": "${pg_port}" },
      { "name": "PG_USERNAME",                  "value": "${pg_username}" },
      { "name": "MELTANO_DATABASE_URI",         "value": "postgresql://${pg_username}:${pg_password}@${pg_host}:${pg_port}/${pg_dbname}?options=-csearch_path=${pg_meltano_schema}" },
      { "name": "AIRFLOW_PASSWORD",             "value": "${airflow_password}" },
      { "name": "AIRFLOW_UI_PORT",              "value": "${airflow_port}" },
      { "name": "AIRFLOW_DATABASE_URI",         "value": "postgresql://${pg_username}:${pg_password}@${pg_host}:${pg_port}/${pg_dbname}?options=-csearch_path=${pg_airflow_schema}" },
      { "name": "EODHISTORICALDATA_JOBS_COUNT", "value": "${eodhistoricaldata_jobs_count}" },
      { "name": "DBT_TARGET_SCHEMA",            "value": "${pg_transform_schema}" }
    ],
    "links": [],
    "workingDirectory": null,
    "readonlyRootFilesystem": null,
    "image": "${meltano_image}",
    "command": ["invoke", "airflow", "webserver", "-p", "${airflow_port}"],
    "user": null,
    "dockerLabels": null,
    "cpu": null,
    "privileged": null,
    "memoryReservation": null,
    "dependsOn": [
      { "condition": "HEALTHY", "containerName": "meltano-airflow-scheduler" }
    ],
    "healthCheck": {
      "command": [ "CMD-SHELL", "! curl http://localhost:5001/health | grep unhealthy" ],
      "interval": 10,
      "retries": 2
    },
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${aws_log_group_name}",
        "awslogs-region": "${aws_log_region}",
        "awslogs-stream-prefix": "meltano"
      }
    }
  },
  {
    "name": "meltano-airflow-scheduler",
    "memory": ${airflow_scheduler_memory_credits},
    "extraHosts": null,
    "dnsServers": null,
    "disableNetworking": null,
    "dnsSearchDomains": null,
    "portMappings": [],
    "hostname": null,
    "essential": true,
    "entryPoint": ["/init.sh"],
    "mountPoints": [
      {
        "containerPath" : "/project/.meltano/run/airflow",
        "sourceVolume" : "meltano-data"
      }
    ],
    "ulimits": null,
    "dockerSecurityOptions": null,
    "environment": [
      { "name": "ENV",                                   "value": "${env}" },
      { "name": "PG_DATABASE",                           "value": "${pg_dbname}" },
      { "name": "PG_ADDRESS",                            "value": "${pg_host}" },
      { "name": "PG_PASSWORD",                           "value": "${pg_password}" },
      { "name": "PG_PORT",                               "value": "${pg_port}" },
      { "name": "PG_USERNAME",                           "value": "${pg_username}" },
      { "name": "MELTANO_DATABASE_URI",                  "value": "postgresql://${pg_username}:${pg_password}@${pg_host}:${pg_port}/${pg_dbname}?options=-csearch_path=${pg_meltano_schema}" },
      { "name": "AIRFLOW_PASSWORD",                      "value": "${airflow_password}" },
      { "name": "AIRFLOW_UI_PORT",                       "value": "${airflow_port}" },
      { "name": "AIRFLOW_DATABASE_URI",                  "value": "postgresql://${pg_username}:${pg_password}@${pg_host}:${pg_port}/${pg_dbname}?options=-csearch_path=${pg_airflow_schema}" },
      { "name": "EODHISTORICALDATA_JOBS_COUNT",          "value": "${eodhistoricaldata_jobs_count}" },
      { "name": "TAP_EODHISTORICALDATA_API_TOKEN",       "value": "${eodhistoricaldata_api_token}" },
      { "name": "TAP_EODHISTORICALDATA_EXCHANGES",       "value": ${jsonencode(eodhistoricaldata_exchanges)} },
      { "name": "TAP_POLYGON_API_KEY",                   "value": "${polygon_api_token}" },
      { "name": "TARGET_POSTGRES_HOST",                  "value": "${pg_host}" },
      { "name": "TARGET_POSTGRES_PORT",                  "value": "${pg_port}" },
      { "name": "TARGET_POSTGRES_USER",                  "value": "${pg_username}" },
      { "name": "TARGET_POSTGRES_PASSWORD",              "value": "${pg_password}" },
      { "name": "TARGET_POSTGRES_DBNAME",                "value": "${pg_dbname}" },
      { "name": "TARGET_POSTGRES_SCHEMA",                "value": "${pg_load_schema}" },

      { "name": "TARGET_POSTGRES_ANALYTICS_HOST",        "value": "${pg_analytics_host}" },
      { "name": "TARGET_POSTGRES_ANALYTICS_PORT",        "value": "${pg_analytics_port}" },
      { "name": "TARGET_POSTGRES_ANALYTICS_USER",        "value": "${pg_analytics_username}" },
      { "name": "TARGET_POSTGRES_ANALYTICS_PASSWORD",    "value": "${pg_analytics_password}" },
      { "name": "TARGET_POSTGRES_ANALYTICS_DBNAME",      "value": "${pg_analytics_dbname}" },
      { "name": "TARGET_POSTGRES_ANALYTICS_SCHEMA",      "value": "${pg_analytics_schema}" },

      { "name": "TAP_POSTGRES_HOST",                     "value": "${pg_host}" },
      { "name": "TAP_POSTGRES_PORT",                     "value": "${pg_port}" },
      { "name": "TAP_POSTGRES_USER",                     "value": "${pg_username}" },
      { "name": "TAP_POSTGRES_PASSWORD",                 "value": "${pg_password}" },
      { "name": "TAP_POSTGRES_DBNAME",                   "value": "${pg_dbname}" },
      { "name": "TAP_POSTGRES_FILTER_SCHEMAS",           "value": "${pg_transform_schema}" },

      { "name": "TAP_POSTGRES_SYNC_HOST",                "value": "${pg_production_host}" },
      { "name": "TAP_POSTGRES_SYNC_PORT",                "value": "${pg_production_port}" },
      { "name": "TAP_POSTGRES_SYNC_USER",                "value": "${pg_production_internal_sync_username}" },
      { "name": "TAP_POSTGRES_SYNC_PASSWORD",            "value": "${pg_production_internal_sync_password}" },
      { "name": "TAP_POSTGRES_SYNC_DBNAME",              "value": "${pg_dbname}" },
      { "name": "TAP_POSTGRES_SYNC_FILTER_SCHEMAS",      "value": "${pg_load_schema}" },

      { "name": "TAP_POSTGRES_ANALYTICS_FILTER_SCHEMAS", "value": "app,${pg_transform_schema}" },

      { "name": "DBT_THREADS",                           "value": "${dbt_threads}" },
      { "name": "DBT_TARGET_SCHEMA",                     "value": "${pg_transform_schema}" },
      { "name": "DBT_TARGET",                            "value": "postgres" },

      { "name": "ALGOLIA_APP_ID",                        "value": "${algolia_app_id}" },
      { "name": "ALGOLIA_TICKERS_INDEX",                 "value": "${algolia_tickers_index}" },
      { "name": "ALGOLIA_COLLECTIONS_INDEX",             "value": "${algolia_collections_index}" },
      { "name": "ALGOLIA_INDEXING_API_KEY",              "value": "${algolia_indexing_key}" },

      { "name": "DATADOG_API_KEY",                       "value": "${datadog_api_key}" },
      { "name": "DATADOG_APP_KEY",                       "value": "${datadog_app_key}" },

      { "name": "MLFLOW_ARTIFACT_LOCATION",              "value": "${mlflow_artifact_location}" },
      { "name": "MLFLOW_TRACKING_URI",                   "value": "postgresql://${pg_username}:${pg_password}@${pg_host}:${pg_port}/${pg_dbname}?options=-csearch_path=${pg_mlflow_schema}" }
    ],
    "links": [],
    "workingDirectory": null,
    "readonlyRootFilesystem": null,
    "image": "${meltano_image}",
    "command": ["invoke", "airflow", "scheduler"],
    "user": null,
    "dockerLabels": null,
    "cpu": ${airflow_scheduler_cpu_credits},
    "privileged": null,
    "memoryReservation": null,
    "healthCheck": {
      "command": [ "CMD-SHELL", "curl http://localhost:8793/ || exit 1" ],
      "interval": 10,
      "retries": 2
    },
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${aws_log_group_name}",
        "awslogs-region": "${aws_log_region}",
        "awslogs-stream-prefix": "meltano"
      }
    }
  },
  {
    "name": "websockets_eod",
    "memory": ${eod_websockets_memory_credits},
    "extraHosts": null,
    "dnsServers": null,
    "disableNetworking": null,
    "dnsSearchDomains": null,
    "portMappings": [],
    "hostname": null,
    "essential": true,
    "entryPoint": [],
    "mountPoints": [],
    "ulimits": null,
    "dockerSecurityOptions": null,
    "environment": [
      { "name": "EOD_API_TOKEN",      "value": "${eodhistoricaldata_api_token}" },
      { "name": "PG_HOST",            "value": "${pg_host}" },
      { "name": "PG_PORT",            "value": "${pg_port}" },
      { "name": "PG_DBNAME",          "value": "${pg_dbname}" },
      { "name": "PG_USERNAME",        "value": "${pg_username}" },
      { "name": "PG_PASSWORD",        "value": "${pg_password}" },
      { "name": "ENV",                "value": "${env}" },
      { "name": "PUBLIC_SCHEMA_NAME", "value": "${pg_transform_schema}" },
      { "name": "DD_API_KEY",         "value": "${datadog_api_key}" },
      { "name": "DD_SITE",            "value": "datadoghq.com" }
    ],
    "links": [],
    "workingDirectory": null,
    "readonlyRootFilesystem": null,
    "image": "${websockets_image}",
    "command": ["client_eod.py"],
    "user": null,
    "dockerLabels": null,
    "cpu": null,
    "privileged": null,
    "memoryReservation": null,
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${aws_log_group_name}",
        "awslogs-region": "${aws_log_region}",
        "awslogs-stream-prefix": "websockets_eod"
      }
    }
  },
  {
    "name": "websockets_polygon",
    "memory": ${polygon_websockets_memory_credits},
    "extraHosts": null,
    "dnsServers": null,
    "disableNetworking": null,
    "dnsSearchDomains": null,
    "portMappings": [],
    "hostname": null,
    "essential": true,
    "entryPoint": [],
    "mountPoints": [],
    "ulimits": null,
    "dockerSecurityOptions": null,
    "environment": [
      { "name": "POLYGON_API_TOKEN",               "value": "${polygon_api_token}" },
      { "name": "POLYGON_REALTIME_STREAMING_HOST", "value": "${polygon_realtime_streaming_host}" },
      { "name": "PG_HOST",                         "value": "${pg_host}" },
      { "name": "PG_PORT",                         "value": "${pg_port}" },
      { "name": "PG_DBNAME",                       "value": "${pg_dbname}" },
      { "name": "PG_USERNAME",                     "value": "${pg_username}" },
      { "name": "PG_PASSWORD",                     "value": "${pg_password}" },
      { "name": "ENV",                             "value": "${env}" },
      { "name": "PUBLIC_SCHEMA_NAME",              "value": "${pg_transform_schema}" },
      { "name": "DD_API_KEY",                      "value": "${datadog_api_key}" },
      { "name": "DD_SITE",                         "value": "datadoghq.com" }
    ],
    "links": [],
    "workingDirectory": null,
    "readonlyRootFilesystem": null,
    "image": "${websockets_image}",
    "command": ["client_polygon.py"],
    "user": null,
    "dockerLabels": null,
    "cpu": null,
    "privileged": null,
    "memoryReservation": null,
    "logConfiguration": {
      "logDriver": "awslogs",
      "options": {
        "awslogs-group": "${aws_log_group_name}",
        "awslogs-region": "${aws_log_region}",
        "awslogs-stream-prefix": "websockets_polygon"
      }
    }
  }
]
